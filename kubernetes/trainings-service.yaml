apiVersion: apps/v1
kind: Deployment
metadata:
  name: trainings-service-http
spec:
  selector:
    matchLabels:
      app: trainings-service-http
  template:
    metadata:
      labels:
        app: trainings-service-http
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command:
          - 'sh'
          - '-c'
          - 'echo -e "Checking for the availability of MySQL Server deployment";
            while ! nc -z mysql-service 3306; do sleep 5; printf "-"; done; echo -e "  >> MySQL DB Server has started";'
      containers:
        - name: server
          image: trainings-service
          ports:
            - containerPort: 3000
          envFrom:
          - configMapRef:
              name: server-env
---
apiVersion: v1
kind: Service
metadata:
  name: trainings-service-http
spec:
  type: NodePort
  selector:
    app: trainings-service-http
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      nodePort: 30101